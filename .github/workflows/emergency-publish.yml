name: Emergency Publish to PyPI

on:
  workflow_run:
    workflows: ["Publish to PyPI"]
    types: [completed]

jobs:
  emergency-publish:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'failure' && startsWith(github.event.workflow_run.head_branch, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
    
    - name: Install Poetry via pip (fallback method)
      run: |
        python -m pip install --upgrade pip
        pip install poetry
      timeout-minutes: 10
    
    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
      timeout-minutes: 5
    
    - name: Install dependencies
      run: poetry install --no-interaction
      timeout-minutes: 15
    
    - name: Run tests
      run: poetry run pytest
      timeout-minutes: 10
    
    - name: Build package
      run: poetry build
      timeout-minutes: 10
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        user: __token__
        skip-existing: true
      timeout-minutes: 15
